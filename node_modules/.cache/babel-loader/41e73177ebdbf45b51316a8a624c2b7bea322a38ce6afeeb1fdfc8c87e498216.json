{"ast":null,"code":"var _jsxFileName = \"/Users/torkildjurhuus/Code/nordic-sandwich-generator/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [sandwiches, setSandwiches] = useState([]);\n  const [numSandwiches, setNumSandwiches] = useState(1);\n  const toppings = [\"Roast beef\", \"Egg og avocado\", \"Skinka og tomat\", \"Piparspeigpylsa\", \"Hvítleksspeigpylsa\", \"Speigpylsa\", \"Livradeiggj\", \"Brieostur\"];\n  const breads = [\"Chiabretð\", \"Fullkornsbreyð\"];\n  const condiments = [\"Dijonaise\", \"Majones\", \"Grønt pesto\", \"Reytt pesto\", \"Remoláta\"];\n  const generateSandwiches = () => {\n    const newSandwiches = [];\n    for (let i = 0; i < numSandwiches; i++) {\n      const topping = toppings[Math.floor(Math.random() * toppings.length)];\n      const bread = breads[Math.floor(Math.random() * breads.length)];\n      const condiment = condiments[Math.floor(Math.random() * condiments.length)];\n      newSandwiches.push({\n        topping,\n        bread,\n        condiment\n      });\n    }\n    setSandwiches(newSandwiches);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"num-sandwiches\",\n      children: \"Number of sandwiches:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"num-sandwiches\",\n      type: \"number\",\n      value: numSandwiches,\n      onChange: e => setNumSandwiches(Number(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateSandwiches,\n      children: \"Generate Sandwiches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sandwiches\",\n      children: sandwiches.map((sandwich, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sandwich\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dressingar, krydd og anna\\xF0: \", sandwich.condiment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"P\\xE1legg: \", sandwich.topping]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Brey\\xF0: \", sandwich.bread]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qqsIGOLmIXE40h+X9jBZNzHHohM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","sandwiches","setSandwiches","numSandwiches","setNumSandwiches","toppings","breads","condiments","generateSandwiches","newSandwiches","i","topping","Math","floor","random","length","bread","condiment","push","e","Number","target","value","map","sandwich","index"],"sources":["/Users/torkildjurhuus/Code/nordic-sandwich-generator/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [sandwiches, setSandwiches] = useState<\n    { topping: string; bread: string; condiment: string }[]\n  >([]);\n  const [numSandwiches, setNumSandwiches] = useState(1);\n\n  const toppings = [\"Roast beef\", \"Egg og avocado\", \"Skinka og tomat\", \"Piparspeigpylsa\", \"Hvítleksspeigpylsa\", \"Speigpylsa\", \"Livradeiggj\", \"Brieostur\"];\n  const breads = [\"Chiabretð\", \"Fullkornsbreyð\"];\n  const condiments = [\"Dijonaise\", \"Majones\", \"Grønt pesto\", \"Reytt pesto\", \"Remoláta\"];\n\n  const generateSandwiches = () => {\n    const newSandwiches: {\n      topping: string;\n      bread: string;\n      condiment: string;\n    }[] = [];\n    for (let i = 0; i < numSandwiches; i++) {\n      const topping = toppings[Math.floor(Math.random() * toppings.length)];\n      const bread = breads[Math.floor(Math.random() * breads.length)];\n      const condiment =\n        condiments[Math.floor(Math.random() * condiments.length)];\n      newSandwiches.push({ topping, bread, condiment });\n    }\n    setSandwiches(newSandwiches);\n  };\n\n  return (\n    <div className=\"app\">\n      <label htmlFor=\"num-sandwiches\">Number of sandwiches:</label>\n      <input\n        id=\"num-sandwiches\"\n        type=\"number\"\n        value={numSandwiches}\n        onChange={(e) => setNumSandwiches(Number(e.target.value))}\n      />\n      <button onClick={generateSandwiches}>Generate Sandwiches</button>\n      <div className=\"sandwiches\">\n        {sandwiches.map((sandwich, index) => (\n          <div key={index} className=\"sandwich\">\n            <p>Dressingar, krydd og annað: {sandwich.condiment}</p>\n            <p>Pálegg: {sandwich.topping}</p>\n            <p>Breyð: {sandwich.bread}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAE1C,EAAE,CAAC;EACL,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMM,QAAQ,GAAG,CAAC,YAAY,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,CAAC;EACvJ,MAAMC,MAAM,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC;EAC9C,MAAMC,UAAU,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,CAAC;EAErF,MAAMC,kBAAkB,GAAG,MAAM;IAC/B,MAAMC,aAIH,GAAG,EAAE;IACR,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,aAAa,EAAEO,CAAC,EAAE,EAAE;MACtC,MAAMC,OAAO,GAAGN,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGT,QAAQ,CAACU,MAAM,CAAC,CAAC;MACrE,MAAMC,KAAK,GAAGV,MAAM,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGR,MAAM,CAACS,MAAM,CAAC,CAAC;MAC/D,MAAME,SAAS,GACbV,UAAU,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,UAAU,CAACQ,MAAM,CAAC,CAAC;MAC3DN,aAAa,CAACS,IAAI,CAAC;QAAEP,OAAO;QAAEK,KAAK;QAAEC;MAAU,CAAC,CAAC;IACnD;IACAf,aAAa,CAACO,aAAa,CAAC;EAC9B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAO,OAAO,EAAC,gBAAgB;MAAA,UAAC;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC7D;MACE,EAAE,EAAC,gBAAgB;MACnB,IAAI,EAAC,QAAQ;MACb,KAAK,EAAEN,aAAc;MACrB,QAAQ,EAAGgB,CAAC,IAAKf,gBAAgB,CAACgB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAC1D,eACF;MAAQ,OAAO,EAAEd,kBAAmB;MAAA,UAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAS,eACjE;MAAK,SAAS,EAAC,YAAY;MAAA,UACxBP,UAAU,CAACsB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9B;QAAiB,SAAS,EAAC,UAAU;QAAA,wBACnC;UAAA,WAAG,iCAA4B,EAACD,QAAQ,CAACP,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACvD;UAAA,WAAG,aAAQ,EAACO,QAAQ,CAACb,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACjC;UAAA,WAAG,YAAO,EAACa,QAAQ,CAACR,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAHtBS,KAAK;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA/CIzB,GAAG;AAAA,KAAHA,GAAG;AAiDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}